name: CI Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-cache-

      - name: Install dependencies
        run: npm ci

      - name: Quick lint (non-blocking)
        run: npx eslint . --ext .js,.mjs || echo "ESLint issues"

      - name: Run unit tests
        run: npm run test:unit -- --json --outputFile=jest-unit.json

      - name: Upload unit test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jest-unit
          path: jest-unit.json

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-integration-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-cache-

      - name: Install dependencies
        run: npm ci

      - name: Run integration tests (Node env, serial)
        run: npm run test:integration -- --json --outputFile=jest-integration.json

      - name: Upload integration results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jest-integration
          path: jest-integration.json
